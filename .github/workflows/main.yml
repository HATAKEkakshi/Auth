name: SonarQube Analysis

on:
  push:
    branches: 
      - main
  pull_request:
    branches:
      - main

jobs:
  sonarqube:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-cov
    
    - name: Run tests with coverage
      run: |
        pytest --cov=auth --cov-report=xml --cov-report=html --junitxml=test-results.xml || true
        # Create empty coverage file if no tests ran
        if [ ! -f coverage.xml ]; then
          echo '<?xml version="1.0" ?><coverage version="7.0"><sources><source>.</source></sources><packages></packages></coverage>' > coverage.xml
        fi

    - name: SonarCloud Scan
      uses: SonarSource/sonarqube-scan-action@v5.0.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  build-and-push:
    runs-on: ubuntu-latest
    needs: sonarqube

    steps:
      - name:  Checkout code
        uses: actions/checkout@v3

      - name:  Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name:  Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          platforms: linux/amd64,linux/arm64
          tags: |
            hatakekakashihk/auth:latest
            hatakekakashihk/auth:amd64
            hatakekakashihk/auth:arm64
            hatakekakashihk/auth:${{ github.sha }}